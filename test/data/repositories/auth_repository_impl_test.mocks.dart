// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pos/test/data/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:flutter_pos/core/common/result.dart' as _i7;
import 'package:flutter_pos/data/datasources/remote/auth_remote_datasource_impl.dart'
    as _i5;
import 'package:flutter_pos/data/models/user_model.dart' as _i8;
import 'package:flutter_pos/domain/entities/user_entity.dart' as _i4;
import 'package:google_sign_in/google_sign_in.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeFirebaseAuth_0 extends _i1.SmartFake implements _i2.FirebaseAuth {
  _FakeFirebaseAuth_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoogleSignIn_1 extends _i1.SmartFake implements _i3.GoogleSignIn {
  _FakeGoogleSignIn_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserEntity_2 extends _i1.SmartFake implements _i4.UserEntity {
  _FakeUserEntity_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSourceImpl extends _i1.Mock
    implements _i5.AuthRemoteDataSourceImpl {
  MockAuthRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(
            Invocation.getter(#firebaseAuth),
            returnValue: _FakeFirebaseAuth_0(
              this,
              Invocation.getter(#firebaseAuth),
            ),
          )
          as _i2.FirebaseAuth);

  @override
  _i3.GoogleSignIn get googleSignIn =>
      (super.noSuchMethod(
            Invocation.getter(#googleSignIn),
            returnValue: _FakeGoogleSignIn_1(
              this,
              Invocation.getter(#googleSignIn),
            ),
          )
          as _i3.GoogleSignIn);

  @override
  _i6.Future<_i7.Result<_i8.UserModel>> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i6.Future<_i7.Result<_i8.UserModel>>.value(
              _i9.dummyValue<_i7.Result<_i8.UserModel>>(
                this,
                Invocation.method(#signInWithGoogle, []),
              ),
            ),
          )
          as _i6.Future<_i7.Result<_i8.UserModel>>);

  @override
  _i6.Future<_i7.Result<void>> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<_i7.Result<void>>.value(
              _i9.dummyValue<_i7.Result<void>>(
                this,
                Invocation.method(#signOut, []),
              ),
            ),
          )
          as _i6.Future<_i7.Result<void>>);

  @override
  _i6.Future<_i7.Result<_i8.UserModel?>> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i6.Future<_i7.Result<_i8.UserModel?>>.value(
              _i9.dummyValue<_i7.Result<_i8.UserModel?>>(
                this,
                Invocation.method(#getCurrentUser, []),
              ),
            ),
          )
          as _i6.Future<_i7.Result<_i8.UserModel?>>);
}

/// A class which mocks [UserModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserModel extends _i1.Mock implements _i8.UserModel {
  MockUserModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i9.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  set id(String? value) => super.noSuchMethod(
    Invocation.setter(#id, value),
    returnValueForMissingStub: null,
  );

  @override
  set email(String? value) => super.noSuchMethod(
    Invocation.setter(#email, value),
    returnValueForMissingStub: null,
  );

  @override
  set phone(String? value) => super.noSuchMethod(
    Invocation.setter(#phone, value),
    returnValueForMissingStub: null,
  );

  @override
  set name(String? value) => super.noSuchMethod(
    Invocation.setter(#name, value),
    returnValueForMissingStub: null,
  );

  @override
  set gender(String? value) => super.noSuchMethod(
    Invocation.setter(#gender, value),
    returnValueForMissingStub: null,
  );

  @override
  set birthdate(String? value) => super.noSuchMethod(
    Invocation.setter(#birthdate, value),
    returnValueForMissingStub: null,
  );

  @override
  set imageUrl(String? value) => super.noSuchMethod(
    Invocation.setter(#imageUrl, value),
    returnValueForMissingStub: null,
  );

  @override
  set authProvider(_i4.AuthProvider? value) => super.noSuchMethod(
    Invocation.setter(#authProvider, value),
    returnValueForMissingStub: null,
  );

  @override
  set createdAt(String? value) => super.noSuchMethod(
    Invocation.setter(#createdAt, value),
    returnValueForMissingStub: null,
  );

  @override
  set updatedAt(String? value) => super.noSuchMethod(
    Invocation.setter(#updatedAt, value),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i4.UserEntity toEntity() =>
      (super.noSuchMethod(
            Invocation.method(#toEntity, []),
            returnValue: _FakeUserEntity_2(
              this,
              Invocation.method(#toEntity, []),
            ),
          )
          as _i4.UserEntity);
}

/// A class which mocks [UserEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserEntity extends _i1.Mock implements _i4.UserEntity {
  MockUserEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i9.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  List<Object?> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object?>[])
          as List<Object?>);

  @override
  _i4.UserEntity copyWith({
    String? id,
    String? phone,
    String? email,
    String? name,
    String? gender,
    String? birthdate,
    String? imageUrl,
    _i4.AuthProvider? authProvider,
    String? createdAt,
    String? updatedAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #id: id,
              #phone: phone,
              #email: email,
              #name: name,
              #gender: gender,
              #birthdate: birthdate,
              #imageUrl: imageUrl,
              #authProvider: authProvider,
              #createdAt: createdAt,
              #updatedAt: updatedAt,
            }),
            returnValue: _FakeUserEntity_2(
              this,
              Invocation.method(#copyWith, [], {
                #id: id,
                #phone: phone,
                #email: email,
                #name: name,
                #gender: gender,
                #birthdate: birthdate,
                #imageUrl: imageUrl,
                #authProvider: authProvider,
                #createdAt: createdAt,
                #updatedAt: updatedAt,
              }),
            ),
          )
          as _i4.UserEntity);
}
