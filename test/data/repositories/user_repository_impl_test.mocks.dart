// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pos/test/data/repositories/user_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_pos/app/services/connectivity/connectivity_service.dart'
    as _i2;
import 'package:flutter_pos/data/datasources/local/queued_action_local_datasource_impl.dart'
    as _i8;
import 'package:flutter_pos/data/datasources/local/user_local_datasource_impl.dart'
    as _i3;
import 'package:flutter_pos/data/datasources/remote/user_remote_datasource_impl.dart'
    as _i7;
import 'package:flutter_pos/data/models/queued_action_model.dart' as _i9;
import 'package:flutter_pos/data/models/user_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i2.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [UserLocalDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDatasourceImpl extends _i1.Mock
    implements _i3.UserLocalDatasourceImpl {
  MockUserLocalDatasourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> createUser(_i5.UserModel? user) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [user]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createUser, [user]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> updateUser(_i5.UserModel? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteUser(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i5.UserModel?> getUser(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [id]),
            returnValue: _i4.Future<_i5.UserModel?>.value(),
          )
          as _i4.Future<_i5.UserModel?>);
}

/// A class which mocks [UserRemoteDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDatasourceImpl extends _i1.Mock
    implements _i7.UserRemoteDatasourceImpl {
  MockUserRemoteDatasourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> createUser(_i5.UserModel? user) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [user]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createUser, [user]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> updateUser(_i5.UserModel? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteUser(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i5.UserModel?> getUser(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [id]),
            returnValue: _i4.Future<_i5.UserModel?>.value(),
          )
          as _i4.Future<_i5.UserModel?>);
}

/// A class which mocks [QueuedActionLocalDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueuedActionLocalDatasourceImpl extends _i1.Mock
    implements _i8.QueuedActionLocalDatasourceImpl {
  MockQueuedActionLocalDatasourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<int> createQueuedAction(_i9.QueuedActionModel? queue) =>
      (super.noSuchMethod(
            Invocation.method(#createQueuedAction, [queue]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<void> deleteQueuedAction(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteQueuedAction, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i9.QueuedActionModel?> getQueuedAction(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getQueuedAction, [id]),
            returnValue: _i4.Future<_i9.QueuedActionModel?>.value(),
          )
          as _i4.Future<_i9.QueuedActionModel?>);

  @override
  _i4.Future<List<_i9.QueuedActionModel>> getAllUserQueuedAction() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUserQueuedAction, []),
            returnValue: _i4.Future<List<_i9.QueuedActionModel>>.value(
              <_i9.QueuedActionModel>[],
            ),
          )
          as _i4.Future<List<_i9.QueuedActionModel>>);
}
