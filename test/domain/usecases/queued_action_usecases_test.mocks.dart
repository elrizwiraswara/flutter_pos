// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pos/test/domain/usecases/queued_action_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_pos/core/common/result.dart' as _i4;
import 'package:flutter_pos/domain/entities/queued_action_entity.dart' as _i5;
import 'package:flutter_pos/domain/repositories/queued_action_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [QueuedActionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueuedActionRepository extends _i1.Mock
    implements _i2.QueuedActionRepository {
  MockQueuedActionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.QueuedActionEntity>>> getAllQueuedAction() =>
      (super.noSuchMethod(
            Invocation.method(#getAllQueuedAction, []),
            returnValue:
                _i3.Future<_i4.Result<List<_i5.QueuedActionEntity>>>.value(
                  _i6.dummyValue<_i4.Result<List<_i5.QueuedActionEntity>>>(
                    this,
                    Invocation.method(#getAllQueuedAction, []),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<List<_i5.QueuedActionEntity>>>);

  @override
  _i3.Future<_i4.Result<List<bool>>> executeAllQueuedActions(
    List<_i5.QueuedActionEntity>? queues,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#executeAllQueuedActions, [queues]),
            returnValue: _i3.Future<_i4.Result<List<bool>>>.value(
              _i6.dummyValue<_i4.Result<List<bool>>>(
                this,
                Invocation.method(#executeAllQueuedActions, [queues]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<bool>>>);

  @override
  _i3.Future<_i4.Result<bool>> executeQueuedAction(
    _i5.QueuedActionEntity? queue,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#executeQueuedAction, [queue]),
            returnValue: _i3.Future<_i4.Result<bool>>.value(
              _i6.dummyValue<_i4.Result<bool>>(
                this,
                Invocation.method(#executeQueuedAction, [queue]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<bool>>);
}
