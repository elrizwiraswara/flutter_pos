// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pos/test/domain/usecases/transaction_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_pos/core/common/result.dart' as _i4;
import 'package:flutter_pos/domain/entities/transaction_entity.dart' as _i6;
import 'package:flutter_pos/domain/repositories/transaction_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [TransactionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionRepository extends _i1.Mock
    implements _i2.TransactionRepository {
  MockTransactionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<int>> syncAllUserTransactions(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#syncAllUserTransactions, [userId]),
            returnValue: _i3.Future<_i4.Result<int>>.value(
              _i5.dummyValue<_i4.Result<int>>(
                this,
                Invocation.method(#syncAllUserTransactions, [userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<_i6.TransactionEntity?>> getTransaction(
    int? transactionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTransaction, [transactionId]),
            returnValue: _i3.Future<_i4.Result<_i6.TransactionEntity?>>.value(
              _i5.dummyValue<_i4.Result<_i6.TransactionEntity?>>(
                this,
                Invocation.method(#getTransaction, [transactionId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i6.TransactionEntity?>>);

  @override
  _i3.Future<_i4.Result<int>> createTransaction(
    _i6.TransactionEntity? transaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createTransaction, [transaction]),
            returnValue: _i3.Future<_i4.Result<int>>.value(
              _i5.dummyValue<_i4.Result<int>>(
                this,
                Invocation.method(#createTransaction, [transaction]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<void>> updateTransaction(
    _i6.TransactionEntity? transaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTransaction, [transaction]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#updateTransaction, [transaction]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> deleteTransaction(int? transactionId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTransaction, [transactionId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteTransaction, [transactionId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<List<_i6.TransactionEntity>>> getUserTransactions(
    String? userId, {
    String? orderBy,
    String? sortBy,
    int? limit,
    int? offset,
    String? contains,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUserTransactions,
              [userId],
              {
                #orderBy: orderBy,
                #sortBy: sortBy,
                #limit: limit,
                #offset: offset,
                #contains: contains,
              },
            ),
            returnValue:
                _i3.Future<_i4.Result<List<_i6.TransactionEntity>>>.value(
                  _i5.dummyValue<_i4.Result<List<_i6.TransactionEntity>>>(
                    this,
                    Invocation.method(
                      #getUserTransactions,
                      [userId],
                      {
                        #orderBy: orderBy,
                        #sortBy: sortBy,
                        #limit: limit,
                        #offset: offset,
                        #contains: contains,
                      },
                    ),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<List<_i6.TransactionEntity>>>);
}
