// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pos/test/domain/usecases/product_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_pos/core/common/result.dart' as _i4;
import 'package:flutter_pos/domain/entities/product_entity.dart' as _i6;
import 'package:flutter_pos/domain/repositories/product_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i2.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<int>> syncAllUserProducts(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#syncAllUserProducts, [userId]),
            returnValue: _i3.Future<_i4.Result<int>>.value(
              _i5.dummyValue<_i4.Result<int>>(
                this,
                Invocation.method(#syncAllUserProducts, [userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<_i6.ProductEntity?>> getProduct(int? productId) =>
      (super.noSuchMethod(
            Invocation.method(#getProduct, [productId]),
            returnValue: _i3.Future<_i4.Result<_i6.ProductEntity?>>.value(
              _i5.dummyValue<_i4.Result<_i6.ProductEntity?>>(
                this,
                Invocation.method(#getProduct, [productId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i6.ProductEntity?>>);

  @override
  _i3.Future<_i4.Result<int>> createProduct(_i6.ProductEntity? product) =>
      (super.noSuchMethod(
            Invocation.method(#createProduct, [product]),
            returnValue: _i3.Future<_i4.Result<int>>.value(
              _i5.dummyValue<_i4.Result<int>>(
                this,
                Invocation.method(#createProduct, [product]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<void>> updateProduct(_i6.ProductEntity? product) =>
      (super.noSuchMethod(
            Invocation.method(#updateProduct, [product]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#updateProduct, [product]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> deleteProduct(int? productId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProduct, [productId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i5.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteProduct, [productId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<List<_i6.ProductEntity>>> getUserProducts(
    String? userId, {
    String? orderBy,
    String? sortBy,
    int? limit,
    int? offset,
    String? contains,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUserProducts,
              [userId],
              {
                #orderBy: orderBy,
                #sortBy: sortBy,
                #limit: limit,
                #offset: offset,
                #contains: contains,
              },
            ),
            returnValue: _i3.Future<_i4.Result<List<_i6.ProductEntity>>>.value(
              _i5.dummyValue<_i4.Result<List<_i6.ProductEntity>>>(
                this,
                Invocation.method(
                  #getUserProducts,
                  [userId],
                  {
                    #orderBy: orderBy,
                    #sortBy: sortBy,
                    #limit: limit,
                    #offset: offset,
                    #contains: contains,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i6.ProductEntity>>>);
}
