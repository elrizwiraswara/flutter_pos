// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_pos/test/domain/usecases/storage_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_pos/core/common/result.dart' as _i4;
import 'package:flutter_pos/domain/repositories/storage_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [StorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageRepository extends _i1.Mock implements _i2.StorageRepository {
  MockStorageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<String>> uploadUserPhoto(String? imgPath) =>
      (super.noSuchMethod(
            Invocation.method(#uploadUserPhoto, [imgPath]),
            returnValue: _i3.Future<_i4.Result<String>>.value(
              _i5.dummyValue<_i4.Result<String>>(
                this,
                Invocation.method(#uploadUserPhoto, [imgPath]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String>>);

  @override
  _i3.Future<_i4.Result<String?>> uploadProductImage(String? imgPath) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProductImage, [imgPath]),
            returnValue: _i3.Future<_i4.Result<String?>>.value(
              _i5.dummyValue<_i4.Result<String?>>(
                this,
                Invocation.method(#uploadProductImage, [imgPath]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String?>>);
}
